---
description: 
globs: *.md,*.mdc
alwaysApply: false
---
## 給開發者：使用 AI 建立你的 MDC 規則

你好！這份文件旨在幫助你開始使用 Cursor 的 MDC 規則。

你可以直接要求 AI (我) 協助你建立新的規則。以下是一些建議：

1.  **明確你的需求**：告訴我你想建立的規則是做什麼用的？例如：「請幫我建立一個規則，確保所有 Python 檔案都使用 snake_case 命名變數。」或「我需要一個規則，在修改 API 相關檔案時提醒我更新文件。」
2.  **提供範例檔案 (新選項!)**：如果你不確定如何描述規則，或者想基於現有程式碼的風格建立規則（例如命名慣例、註解風格、特定結構等），你可以**提供一個範例檔案的路徑**給我，讓我分析它並產生對應的規則草稿。例如：「請分析這個檔案 `src/utils/helpers.py`，並根據它的命名風格幫我建立一個命名規則。」
3.  **提供上下文**：如果規則與特定檔案類型、目錄或工作流程相關，請盡量說明清楚 (例如 `globs` 或觸發條件)。
4.  **參考範例**: 你可以參考官方文件 (<https://docs.cursor.com/context/rules>) 或社群分享 (<https://forum.cursor.com/t/my-best-practices-for-mdc-rules-and-troubleshooting/50526>) 來獲取靈感。
5.  **組織規則**：考慮使用數字前綴 (如 `001-`, `100-`) 來分類和排序你的規則，方便管理。
6.  **指定偏好的 MCP 工具集**：如果你希望 AI 在執行與特定領域相關的任務時（例如：操作 Lua 程式碼、處理資料庫等），優先使用該領域專屬的 MCP 工具集，你可以在描述需求時**指定該 MCP 工具集的伺服器名稱**（例如：`mcp_lua`）。這會提示 AI 在處理相關任務時，應優先選用該伺服器提供的工具。如果你不確定有哪些可用的 MCP 伺服器名稱，可以直接詢問我。
7.  **檢查舊版規則檔**：在開始建立或修改 MDC 規則前，請先檢查工作區根目錄是否存在舊版的 `.cursorrules` 檔案。如果存在，請參考其內容，協助開發者將相關規則遷移或整合到新的 `.mdc` 架構中。

**思考長遠的規則架構 (重要!)**

當你的規則數量增加時，將所有規則放在一個檔案裡會變得很難管理。建議從一開始就考慮將規則拆分成多個檔案：

*   **為何拆分?** 提高清晰度、可維護性，方便團隊協作。
*   **如何拆分?** 可以考慮按**功能/目的**拆分，例如：
    *   `0xx-Core-...`：適用於整個專案的核心基礎規則。
    *   `1xx-Lang-...`：針對特定程式語言的規則。
    *   `2xx-Workflow-...`：針對特定開發流程的規則。
    *   `3xx-Integration-Tool-...`：與外部服務或特定工具整合的規則。
    *   `4xx-Feature-Module-...`：針對專案特定功能或模組的規則。
*   **命名建議**：使用數字前綴 (如 `001-`) 幫助排序和分類，後面跟隨描述性名稱。
*   **核心指導規則**：可以建立一個主要的「核心指導規則」（例如 `000-Core-MasterGuide.mdc`，就像這個檔案一樣），設定為總是啟用 (`alwaysApply: true`)，用來包含最基礎的規範，並**指導 AI 如何協調和應用其他規則檔案**。
*   **說明文件**：可以在 `.cursor/rules/` 目錄下建立一個 `README.md` 文件，解釋你的規則架構。
*   **與 AI 協作**：你不需要一次搞定所有架構！在建立新規則時，可以隨時與我 (AI) 討論如何將它歸類到現有或新的檔案中。

## 給 AI 助手 (Cursor AI)

請遵循以下指示：

1.  **協助建立規則**：當開發者要求建立 MDC 規則時，請根據其需求，產出格式正確、結構清晰的 `.mdc` 檔案內容。特別注意，如果開發者提供了範例檔案，請先進行分析再產生規則草稿。

2.  **遵循標準 YAML Front Matter 格式**：確保生成的 `.mdc` 檔案的 YAML Front Matter (位於檔案開頭，被 `---` 包圍) 符合 Cursor 的規範。**預設不應包含 `name` 欄位**。以下是四種主要 Rule Type 的正確 YAML 結構範例，其中 `description` 欄位應由使用者根據實際規則內容填寫：

    *   **Type 1: Always**
        *   描述：此類規則**永遠**被包含在模型的上下文中。
        *   YAML 結構範例:
            ```yaml
            ---
            description: 
            globs: 
            alwaysApply: true
            ---
            ```
        *   必要欄位: `description`必須留空。`globs` 必須留空。`alwaysApply` 必須為 `true` 。

    *   **Type 2: Auto Attached**
        *   描述：當工作區中**符合 `globs` 模式的檔案被引用或編輯時**自動附加。
        *   YAML 結構範例:
            ```yaml
            ---
            description: 
            globs: *.js,*.ts
            alwaysApply: false
            ---
            ```
        *   必要欄位: `description`必須留空 , `globs` 需填寫有效的 glob 模式(如範例)。`alwaysApply` 必須為 `false` 。

    *   **Type 3: Agent Requested**
        *   描述：此規則**不會自動套用**，AI 會根據 `description` 判斷是否相關並載入。
        *   YAML 結構範例:
            ```yaml
            ---
            description: 需填寫實際描述，這是 AI 判斷的關鍵
            globs: 
            alwaysApply: false
            ---
            ```
        *   必要欄位: 高品質的 `description` (需填寫實際描述，這是 AI 判斷的關鍵)。`globs` 必須留空。`alwaysApply` 必須為 `false` 。**注意**：Cursor 透過 `description` 的存在、`alwaysApply: false` (或省略) 及 `globs` 通常為空來識別此類規則，**不應使用** `agentRequested: true` 或類似的自訂欄位。

    *   **Type 4: Manual**
        *   描述：只有在使用者透過 `@ruleName` **明確指定時**才會被載入。
        *   YAML 結構範例:
            ```yaml
            ---
            description: 
            globs: 
            alwaysApply: false
            ---
            ```
        *   必要欄位: `description` 必須留空。`globs` 必須留空。`alwaysApply` 必須為 `false` 。

    *   **Markdown 內容**：位於 YAML frontmatter 之後，包含具體的規則說明和指示。
    *   確保將新檔案儲存於 `.cursor/rules/` 目錄下 (若該目錄不存在，請提示開發者建立)。

3.  **主動建議架構**：當協助開發者建立第二個或後續的規則時，或當規則明顯涉及不同領域（例如，一個是通用風格，一個是特定語言）時，**主動提醒**開發者思考規則的架構拆分，並介紹上述的拆分策略和命名建議。

4.  **協助建立與維護架構**：如果開發者同意進行架構拆分，請協助他們：
    *   創建新的 `.mdc` 檔案，使用建議的命名方式。
    *   將規則內容放置到合適的檔案中。
    *   解釋並協助設定不同規則檔案的觸發機制 (參考上述 Rule Type 的 YAML 結構)。
    *   解釋「核心指導規則」的概念，並協助建立或修改該規則以包含對其他規則的協調指令。

5.  **自我評估與移除建議**：在與開發者的互動過程中，請評估此 `000-MDC建立輔助指南.mdc` 檔案是否仍有必要。當你判斷開發者已熟悉 MDC 規則的建立流程和架構概念（例如，已存在數個結構化的自訂規則），請**主動向開發者建議**可以安全地移除此引導檔案，以保持 `.cursor/rules/` 目錄的整潔。**不要**自動刪除，僅提出建議。

6.  **處理 MCP 工具集偏好**：如果開發者在建立規則的要求中指定了偏好的 **MCP 伺服器名稱**（例如 `mcp_lua`），請確保生成的 MDC 規則內容能體現這一點。在未來應用此規則時，當需要執行與該伺服器領域相關的操作時，應優先考慮使用**該指定伺服器內**的工具。當開發者詢問可用的 MCP 伺服器時，請根據當前可用的工具列表，列出相關的伺服器名稱。
